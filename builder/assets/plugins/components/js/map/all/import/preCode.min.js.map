{"version":3,"sources":["all/import/preCode.min.js"],"names":["Object","defineProperty","exports","value","preCode","str","json","replace","$1","$2","len","length","num","Array","join","default"],"mappings":"AAAA,aAEAA,OAAOC,eAAeC,QAAS,cAC9BC,OAAO,IAER,IAAIC,QAAU,SAAiBC,GAC9B,IACIC,KAUJ,OATaD,EAAIE,QAFP,SAEoB,SAAUC,EAAIC,GACtCH,EAAKI,MACTJ,EAAKI,IAAMF,EAAGG,QAEf,IAAIC,EAAMJ,EAAGG,OAASL,EAAKI,IAAM,EAAI,EAAIF,EAAGG,OAASL,EAAKI,IAG1D,OAAOF,EAAK,KAFF,IAAIK,MAAMD,GACLE,KAAK,QAKtBZ,QAAQa,QAAUX","file":"../../../all/import/preCode.min.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar preCode = function preCode(str) {\n\tvar reg = /\\n\\s*/g;\n\tvar json = {};\n\tvar newStr = str.replace(reg, function ($1, $2) {\n\t\tif (!json.len) {\n\t\t\tjson.len = $1.length;\n\t\t};\n\t\tvar num = $1.length - json.len < 0 ? 0 : $1.length - json.len;\n\t\tvar arr = new Array(num);\n\t\tvar str1 = arr.join(' ');\n\t\treturn $1 = '\\n' + str1;\n\t});\n\treturn newStr;\n};\nexports.default = preCode;"]}